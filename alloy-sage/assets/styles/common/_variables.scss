// Grid settings
$main-sm-columns:       12;
$sidebar-sm-columns:    4;

// Colors
$brand-primary:         #e64;
$brand-secondary:       #0ba;
$brand-tertiary:        #8dd;
$brand-quaternary:      #D16;

$brand-dark:            #000;
$brand-light:           #fff;
$brand-grey:            #ccc;

$base-margin:          15px;
$base-alpha:           .6;
// Media queries
// $large-screens:         "screen and (min-width: 1025px)";
// $mobile-screens:        "screen and (max-width: 767px)";
// $tablet-screens:        "screen and (max-width: 1024px)";

$mq-xs:                 "(min-width: 576px)";
$mq-sm:                 "(min-width: 768px)";
$mq-md:                 "(min-width: 992px)";
$mq-lg:                 "(min-width: 1200px)";

///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback),
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;

  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }

  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;

    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }

  @if $fallback {
    font-size: $fallback;
  }

  font-size: $responsive;
}
